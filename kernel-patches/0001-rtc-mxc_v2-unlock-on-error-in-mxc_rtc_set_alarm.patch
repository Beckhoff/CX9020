From b2d1f5c22ef4b932b5af36754acb627771a9e520 Mon Sep 17 00:00:00 2001
From: Dan Carpenter <dan.carpenter@oracle.com>
Date: Wed, 14 Mar 2018 10:37:19 +0300
Subject: [PATCH 1/3] rtc: mxc_v2: unlock on error in mxc_rtc_set_alarm()

We need to unlock if time is more than U32_MAX.
This unlock can be avoided if we lock only after the
check of time > U32_MAX.

Fixes: 83c880f79e88 ("rtc: add mxc driver for i.MX53 SRTC")
Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Signed-off-by: Patrick Bruenn <p.bruenn@beckhoff.com>
---
 drivers/rtc/rtc-mxc_v2.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/drivers/rtc/rtc-mxc_v2.c b/drivers/rtc/rtc-mxc_v2.c
index 9e14efb990b2..d47094172f48 100644
--- a/drivers/rtc/rtc-mxc_v2.c
+++ b/drivers/rtc/rtc-mxc_v2.c
@@ -243,16 +243,17 @@ static int mxc_rtc_set_alarm(struct device *dev, struct rtc_wkalrm *alrm)
 {
 	const time64_t time = rtc_tm_to_time64(&alrm->time);
 	struct mxc_rtc_data *pdata = dev_get_drvdata(dev);
-	int ret = mxc_rtc_lock(pdata);
-
-	if (ret)
-		return ret;
+	int ret;
 
 	if (time > U32_MAX) {
 		dev_err(dev, "Hopefully I am out of service by then :-(\n");
 		return -EINVAL;
 	}
 
+	ret = mxc_rtc_lock(pdata);
+	if (ret)
+		return ret;
+
 	writel((u32)time, pdata->ioaddr + SRTC_LPSAR);
 
 	/* clear alarm interrupt status bit */
-- 
2.11.0

