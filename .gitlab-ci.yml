stages:
  - build
  - add-ssh
  - test

build:
  tags: 
    - kvm
    - ubuntu
  stage: build
  variables:
    # set git user in clones to apply patches
    GIT_CLONE_ARGS: '--config user.name="nobody" --config user.email="nobody@example.com"'
    # use cache to clone linux
    KERNEL_CLONE_ARGS: '--reference /home/gitcaches/linux.reference'
    # use cache to clone u-boot
    UBOOT_CLONE_ARGS: '--reference /home/gitcaches/u-boot.reference'
  script:
    # run readme steps
    - tools/10_prepare_host_ubuntu1604.sh
    - sudo ln -s /usr/bin/arm-linux-gnueabihf-gcc-5 /usr/bin/arm-linux-gnueabihf-gcc
    - sudo ln -s /usr/bin/arm-linux-gnueabihf-g++-5 /usr/bin/arm-linux-gnueabihf-g++
    - git config --global user.name "gitlab-runner"
    - git config --global user.email "gitlab-runner@example.com"
    - tools/prepare_uboot.sh v2018.11
    - make uboot-tests
    - make uboot
    - tools/prepare_kernel.sh v4.17
    - make kernel
#    - tools/prepare_etherlab.sh
#    - make etherlab
    # create image instead of writing to device
    - sudo scripts/build_sdimage.sh
  artifacts:
    paths:
      - sdcard.img

add-ssh:
  tags: 
    - kvm
    - ubuntu
  stage: add-ssh
  script:
    - mkdir mounted_root
    - export SD_LOOPDEVICE=$(sudo losetup --show -Pf sdcard.img)
    - ls -al /dev
    - sudo mount ${SD_LOOPDEVICE}p1 mounted_root
    - sudo mkdir mounted_root/root/.ssh
    - echo ${SSH_AUTHORIZED_KEYS} | sudo tee mounted_root/root/.ssh/authorized_keys
    - sudo chmod 600 mounted_root/root/.ssh/authorized_keys
    - sync && sudo umount mounted_root
  artifacts:
    paths:
      - sdcard.img
  dependencies:
      - build

test:
  image: ubuntu
  tags: 
    - docker
  stage: test
  script:
    - apt-get update > /dev/null && apt-get install -y openssh-client wget unzip > /dev/null
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - scp -P ${SSH_PORT} sdcard.img ${SSH_USER}@${SSH_HOST}:/tmp/sdcard-${DEVICE}-${CI_BUILD_ID}.img
    - scp -P ${SSH_PORT} tests/${SCRIPTNAME}.sh ${SSH_USER}@${SSH_HOST}:/tmp/${SCRIPTNAME}-${DEVICE}-${CI_BUILD_ID}.sh
    - ssh -p ${SSH_PORT} -t -t ${SSH_USER}@${SSH_HOST} "./61_run_test_sd.sh ${DEVICE_ID}-${DEVICE} /tmp/sdcard-${DEVICE}-${CI_BUILD_ID}.img /tmp/${SCRIPTNAME}-${DEVICE}-${CI_BUILD_ID}.sh ./${SCRIPTNAME}-${DEVICE}-${CI_BUILD_ID}.sh"
  variables:
    DEVICE: 'CX9020'
    DEVICE_ID: 'CX09'
    SCRIPTNAME: 'test_boot'
  dependencies:
      - add-ssh
